#!/usr/bin/env python3
"""
–ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è OPC UA Reader —Ç–∞ Writer.

–î–µ–º–æ–Ω—Å—Ç—Ä—É—î:
1. –ß–∏—Ç–∞–Ω–Ω—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤—É–∑–ª–∞ —á–µ—Ä–µ–∑ subprocess
2. –ó–∞–ø–∏—Å –∑–Ω–∞—á–µ–Ω—å —á–µ—Ä–µ–∑ opcua_writer
"""

import asyncio
import subprocess
import json
from opcua_writer import Client, write_values, setup_logging
import logging

setup_logging(logging.INFO)

# URL OPC UA —Å–µ—Ä–≤–µ—Ä–∞
SERVER_URL = "opc.tcp://localhost:4840"


async def read_node_example():
    """–ü—Ä–∏–∫–ª–∞–¥ —á–∏—Ç–∞–Ω–Ω—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤—É–∑–ª–∞."""
    print("=" * 70)
    print("–ü–†–ò–ö–õ–ê–î 1: –ß–∏—Ç–∞–Ω–Ω—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤—É–∑–ª–∞ (valve1)")
    print("=" * 70)
    
    # –í–∏–∫–ª–∏–∫ opcua_reader.py –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤—É–∑–ª–∞
    result = subprocess.run(
        ["python", "opcua_reader.py", SERVER_URL, "--node", "valve1", "--format", "json"],
        capture_output=True,
        text=True
    )
    
    if result.returncode == 0:
        data = json.loads(result.stdout)
        print(f"\n–ß–∞—Å —á–∏—Ç–∞–Ω–Ω—è: {data['timestamp']}")
        print(f"–î–∞–Ω—ñ: {json.dumps(data['data'], indent=2, ensure_ascii=False)}")
    else:
        print(f"–ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è: {result.stderr}")


async def write_values_example():
    """–ü—Ä–∏–∫–ª–∞–¥ –∑–∞–ø–∏—Å—É –∑–Ω–∞—á–µ–Ω—å."""
    print("\n" + "=" * 70)
    print("–ü–†–ò–ö–õ–ê–î 2: –ó–∞–ø–∏—Å –∑–Ω–∞—á–µ–Ω—å")
    print("=" * 70)
    
    async with Client(SERVER_URL) as client:
        data = {
            "cepn1.sensor1": 1,
            "cepn1.sensor2": 1,
            "cepn1.sensor3": 1,
            "cepn1.sensor4": 1,
        }
        
        print(f"\n–ó–∞–ø–∏—Å—É—î–º–æ: {data}")
        results = await write_values(client, data)
        
        success = sum(results.values())
        total = len(results)
        print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç: {success}/{total} —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–æ")
        
        # –ü–æ–∫–∞–∑–∞—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
        for path, success in results.items():
            status = "‚úì" if success else "‚úó"
            print(f"  {status} {path}")


async def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑ –ø—Ä–∏–∫–ª–∞–¥–∞–º–∏."""
    print("\nüöÄ OPC UA Reader & Writer - –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è\n")
    
    # –ü—Ä–∏–∫–ª–∞–¥ 1: –ß–∏—Ç–∞–Ω–Ω—è
    await read_node_example()
    
    # –ü—Ä–∏–∫–ª–∞–¥ 2: –ó–∞–ø–∏—Å
    await write_values_example()
    
    print("\n‚úì –í—Å—ñ –ø—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ–Ω–∞–Ω–æ")


if __name__ == "__main__":
    asyncio.run(main())